version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
    environment:
      NODE_ENV: development
    depends_on:
      - db

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
    depends_on:
      - backend

  # Servicio de base de datos para pruebas
  test-db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Ntc0394**
      POSTGRES_DB: miapp_test
    ports:
      - "5434:5432"
    volumes:
      - test_pgdata:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Servicio para ejecutar pruebas unitarias
  test-runner:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      NODE_ENV: test
      DB_HOST: test-db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: Ntc0394**
      DB_NAME: miapp_test
    depends_on:
      test-db:
        condition: service_healthy
    command: ["npm", "test"]

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Ntc0394**
      POSTGRES_DB: miapp
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: jorge.llamas@local.dev
      PGADMIN_DEFAULT_PASSWORD: Ntc0394**
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  pgdata:
  test_pgdata:
